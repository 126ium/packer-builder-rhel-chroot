// Code generated by "packer-sdc mapstructure-to-hcl2"; DO NOT EDIT.

package chroot

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatConfig is an auto-generated flat version of Config.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatConfig struct {
	PackerBuildName     *string           `mapstructure:"packer_build_name" cty:"packer_build_name" hcl:"packer_build_name"`
	PackerBuilderType   *string           `mapstructure:"packer_builder_type" cty:"packer_builder_type" hcl:"packer_builder_type"`
	PackerCoreVersion   *string           `mapstructure:"packer_core_version" cty:"packer_core_version" hcl:"packer_core_version"`
	PackerDebug         *bool             `mapstructure:"packer_debug" cty:"packer_debug" hcl:"packer_debug"`
	PackerForce         *bool             `mapstructure:"packer_force" cty:"packer_force" hcl:"packer_force"`
	PackerOnError       *string           `mapstructure:"packer_on_error" cty:"packer_on_error" hcl:"packer_on_error"`
	PackerUserVars      map[string]string `mapstructure:"packer_user_variables" cty:"packer_user_variables" hcl:"packer_user_variables"`
	PackerSensitiveVars []string          `mapstructure:"packer_sensitive_variables" cty:"packer_sensitive_variables" hcl:"packer_sensitive_variables"`
	OutputDir           *string           `mapstructure:"output_directory" cty:"output_directory" hcl:"output_directory"`
	WorkDir             *string           `mapstructure:"tmp_directory" cty:"tmp_directory" hcl:"tmp_directory"`
	ImageName           *string           `mapstructure:"image_name" cty:"image_name" hcl:"image_name"`
	MountPath           *string           `mapstructure:"mount_path" cty:"mount_path" hcl:"mount_path"`
	ExportFolder        *string           `mapstructure:"export_folder" cty:"export_folder" hcl:"export_folder"`
	MountOptions        []string          `mapstructure:"mount_options" cty:"mount_options" hcl:"mount_options"`
	BaseRPMS            []string          `mapstructure:"base_rpms" cty:"base_rpms" hcl:"base_rpms"`
	ChrootMounts        [][]string        `mapstructure:"chroot_mounts" cty:"chroot_mounts" hcl:"chroot_mounts"`
	CopyFiles           []string          `mapstructure:"copy_files" cty:"copy_files" hcl:"copy_files"`
	ExportFiles         [][]string        `mapstructure:"export_files" cty:"export_files" hcl:"export_files"`
	CommandWrapper      *string           `mapstructure:"command_wrapper" cty:"command_wrapper" hcl:"command_wrapper"`
	InitChroot          *bool             `mapstructure:"init_chroot" cty:"init_chroot" hcl:"init_chroot"`
	MakeSquash          *bool             `mapstructure:"make_squash" cty:"make_squash" hcl:"make_squash"`
	ExportBuild         *bool             `mapstructure:"export_build" cty:"export_build" hcl:"export_build"`
	NewImage            *bool             `mapstructure:"new_image" cty:"new_image" hcl:"new_image"`
	DontRsync           *bool             `mapstructure:"dont_rsync" cty:"dont_rsync" hcl:"dont_rsync"`
	BaseIamge           *string           `mapstructure:"base_image" cty:"base_image" hcl:"base_image"`
}

// FlatMapstructure returns a new FlatConfig.
// FlatConfig is an auto-generated flat version of Config.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*Config) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatConfig)
}

// HCL2Spec returns the hcl spec of a Config.
// This spec is used by HCL to read the fields of Config.
// The decoded values from this spec will then be applied to a FlatConfig.
func (*FlatConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"packer_build_name":          &hcldec.AttrSpec{Name: "packer_build_name", Type: cty.String, Required: false},
		"packer_builder_type":        &hcldec.AttrSpec{Name: "packer_builder_type", Type: cty.String, Required: false},
		"packer_core_version":        &hcldec.AttrSpec{Name: "packer_core_version", Type: cty.String, Required: false},
		"packer_debug":               &hcldec.AttrSpec{Name: "packer_debug", Type: cty.Bool, Required: false},
		"packer_force":               &hcldec.AttrSpec{Name: "packer_force", Type: cty.Bool, Required: false},
		"packer_on_error":            &hcldec.AttrSpec{Name: "packer_on_error", Type: cty.String, Required: false},
		"packer_user_variables":      &hcldec.AttrSpec{Name: "packer_user_variables", Type: cty.Map(cty.String), Required: false},
		"packer_sensitive_variables": &hcldec.AttrSpec{Name: "packer_sensitive_variables", Type: cty.List(cty.String), Required: false},
		"output_directory":           &hcldec.AttrSpec{Name: "output_directory", Type: cty.String, Required: false},
		"tmp_directory":              &hcldec.AttrSpec{Name: "tmp_directory", Type: cty.String, Required: false},
		"image_name":                 &hcldec.AttrSpec{Name: "image_name", Type: cty.String, Required: false},
		"mount_path":                 &hcldec.AttrSpec{Name: "mount_path", Type: cty.String, Required: false},
		"export_folder":              &hcldec.AttrSpec{Name: "export_folder", Type: cty.String, Required: false},
		"mount_options":              &hcldec.AttrSpec{Name: "mount_options", Type: cty.List(cty.String), Required: false},
		"base_rpms":                  &hcldec.AttrSpec{Name: "base_rpms", Type: cty.List(cty.String), Required: false},
		"chroot_mounts":              &hcldec.AttrSpec{Name: "chroot_mounts", Type: cty.List(cty.List(cty.String)), Required: false},
		"copy_files":                 &hcldec.AttrSpec{Name: "copy_files", Type: cty.List(cty.String), Required: false},
		"export_files":               &hcldec.AttrSpec{Name: "export_files", Type: cty.List(cty.List(cty.String)), Required: false},
		"command_wrapper":            &hcldec.AttrSpec{Name: "command_wrapper", Type: cty.String, Required: false},
		"init_chroot":                &hcldec.AttrSpec{Name: "init_chroot", Type: cty.Bool, Required: false},
		"make_squash":                &hcldec.AttrSpec{Name: "make_squash", Type: cty.Bool, Required: false},
		"export_build":               &hcldec.AttrSpec{Name: "export_build", Type: cty.Bool, Required: false},
		"new_image":                  &hcldec.AttrSpec{Name: "new_image", Type: cty.Bool, Required: false},
		"dont_rsync":                 &hcldec.AttrSpec{Name: "dont_rsync", Type: cty.Bool, Required: false},
		"base_image":                 &hcldec.AttrSpec{Name: "base_image", Type: cty.String, Required: false},
	}
	return s
}
